<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tab Navigation</title>
    <style>
        /* Style for tabs */
        .tab {
            display: none;
        }

        .tab-container {
            overflow: hidden;
            border-bottom: 1px solid #ccc;
            display: flex;
            align-items: flex-end; /* Align children to the bottom */
        }

        .tab-button {
            background-color: #f2f2f2;
            float: left;
            border: 1px solid #ccc;;
            outline: none;
            cursor: pointer;
            padding: 2px 10px;
            transition: background-color 0.3s;
        }

        .tab-button:hover {
            background-color: #ddd;
        }

        .tab-button.active {
            background-color: white;
            padding: 4px 13px;
        }
    </style>
</head>
<body>
    <!-- Container for navigation tabs -->
    <div id="tabs" class="tab-container"></div>

    <!-- Container to display content -->
    <div id="contentContainer"></div>

    <script>
        // Define tabs and corresponding HTML files
        const tabsDefinition = {
            "Tab 1": "file1.html",
            "Tab 2": "file2.html"
        };
        const initialTab = "Tab 2";
        
        // Initialize tabs
        createTabs();

        // Function to create navigation tabs
        function createTabs() {
            const tabContainer = document.getElementById('tabs');
            for (const tabName in tabsDefinition) {
                const button = document.createElement('button');
                button.textContent = tabName;
                button.className = 'tab-button';
                button.addEventListener('click', () => clickTab(button,tabsDefinition[tabName]));
                tabContainer.appendChild(button);
                
                if (tabName == initialTab){
                    clickTab(button,tabsDefinition[tabName]);
                }
            }
            
        }

        // Function to fetch and display content
        function clickTab(clickedTab,htmlFile) {
            fetch(htmlFile)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.text();
                })
                .then(html => {
                    document.getElementById('contentContainer').innerHTML = html;
                })
                .catch(error => {
                    console.error('There was a problem with the fetch operation:', error);
                });
           
            document.querySelectorAll('.tab-button').forEach(button => {
                button.classList.remove('active');
            });
            clickedTab.classList.add('active');
        }

    </script>
</body>
</html>
